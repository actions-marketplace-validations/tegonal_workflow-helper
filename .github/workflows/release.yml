name: Release

on:
  push:
    branches:
      - release/**

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - id: extract-tags
        name: Extract branch info
        uses: actions/github-script@v6
        env:
          GITHUB_REF: $GITHUB_REF
        with:
          script: |
            const { GITHUB_REF } = process.env
            console.log("ref", GITHUB_REF)
            const matches = new RegExp("refs/heads/release/(latest/)?(v[0-9]+\.[0-9]+\.[0-9]+(?:-RC[0-9]+)?)", "g").exec(GITHUB_REF)
            console.log("matches", matches)
            if (matches == null || matches[2] === undefined) {
              core.error("looks like a wrong version was defined, did not match vx.y.z => " + GITHUB_REF)
            }
            const version = matches[2]
            const mainTag = 'tegonal/workflow-helper:' + version
            core.setOutput('mainTag', mainTag)
            core.setOutput('dockerTags', mainTag + (matches[1] !== undefined ? ',tegonal/workflow-helper:latest' : '') )

      - uses: actions/checkout@v2
      - name: "Set up JDK 11"
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 11
      - name: Build assembly
        run: sbt assembly

      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and export to Docker
        uses: docker/build-push-action@v3
        with:
          context: .
          load: true
          tags: ${{ steps.extract-tags.outputs.mainTag }}

      - name: Run it
        run: docker run --rm ${{ steps.extract-tags.outputs.mainTag }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.extract-tags.outputs.dockerTags }}